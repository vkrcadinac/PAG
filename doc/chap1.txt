  
  [1X1 [33X[0;0YThe PAG Package[133X[101X
  
  [33X[0;0Y[13XPrescribed  Automorphism  Groups[113X  ([5XPAG[105X)  is  a  [5XGAP[105X package for constructing
  combinatorial objects with prescribed automorphism groups.[133X
  
  
  [1X1.1 [33X[0;0YGetting Started[133X[101X
  
  [33X[0;0YThe package is loaded by[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XLoadPackage("PAG"); [127X[104X
  [4X[32X[104X
  
  [33X[0;0YLet  us  present  a  small example from the paper [Krc18]. In Theorem 8.1, a
  simple   5-(16,7,10)  design  with  the  following  automorphism  group  was
  constructed.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg:=Group((2,3,4)(5,6,7,8,9,10)(11,12,13,14,15,16), [127X[104X
    [4X[25X>[125X [27X(1,5)(2,12)(3,15)(4,8)(6,14)(7,16)(9,10)(11,13));[127X[104X
  [4X[32X[104X
  
  [33X[0;0YThe design can be obtained by typing[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XKramerMesnerSearch(5,16,7,10,g);[127X[104X
    [4X[28XComputing t-subset orbit representatives...[128X[104X
    [4X[28X28[128X[104X
    [4X[28XComputing k-subset orbit representatives...[128X[104X
    [4X[28X71[128X[104X
    [4X[28XComputing the Kramer-Mesner matrix...[128X[104X
    [4X[28X[ 29, 72 ][128X[104X
    [4X[28XStarting solver...[128X[104X
    [4X[28XNo BOUNDS [128X[104X
    [4X[28XThe RHS is fixed ![128X[104X
    [4X[28XNo upper bounds: 0/1 variables are assumed [128X[104X
    [4X[28X[128X[104X
    [4X[28XOrthogonal defect: 26.953339[128X[104X
    [4X[28XFirst reduction successful[128X[104X
    [4X[28XOrthogonal defect: 20.216092[128X[104X
    [4X[28XSecond reduction successful[128X[104X
    [4X[28X.[128X[104X
    [4X[28X.[128X[104X
    [4X[28X.[128X[104X
  [4X[32X[104X
  
  [33X[0;0YComments during the calculation can be supressed by setting global options.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XPAGGlobalOptions.Silent:=true;[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27Xd:=KramerMesnerSearch(5,16,7,10,g);[127X[104X
    [4X[28X[ rec( autSubgroup := Group([ (2,3,4)(5,6,7,8,9,10)(11,12,13,14,15,16), [128X[104X
    [4X[28X          (1,5)(2,12)(3,15)(4,8)(6,14)(7,16)(9,10)(11,13) ]), [128X[104X
    [4X[28X      blocks := [ [ 1, 2, 3, 4, 5, 6, 13 ], [ 1, 2, 3, 4, 5, 6, 14 ], [128X[104X
    [4X[28X          [ 1, 2, 3, 4, 5, 7, 9 ], [ 1, 2, 3, 4, 5, 7, 12 ], [128X[104X
    [4X[28X          [ 1, 2, 3, 4, 5, 9, 16 ], [ 1, 2, 3, 4, 5, 10, 12 ], [128X[104X
    [4X[28X          [ 1, 2, 3, 4, 5, 10, 13 ], [ 1, 2, 3, 4, 5, 11, 12 ], [128X[104X
    [4X[28X          [ 1, 2, 3, 4, 5, 11, 16 ], [ 1, 2, 3, 4, 5, 12, 14 ], [128X[104X
    [4X[28X          [ 1, 2, 3, 4, 6, 7, 14 ], [ 1, 2, 3, 4, 6, 7, 15 ], [128X[104X
    [4X[28X.[128X[104X
    [4X[28X.[128X[104X
    [4X[28X.[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  output is a list of non-isomorphic designs in the [5XDesign[105X package format
  [14X'DESIGN: Design'[114X. We can check that it is really a 5-design.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XList(d,AllTDesignLambdas);[127X[104X
    [4X[28X[ [ 2080, 910, 364, 130, 40, 10 ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe output is large because the [5XDesign[105X format includes a list of all blocks,
  and  5-(16,7,10)  designs have 2080 blocks. Instead, we can ask just for the
  base blocks.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xbb:=KramerMesnerSearch(5,16,7,10,g,rec(BaseBlocks:=true));[127X[104X
    [4X[28X[ [ [ 1, 2, 3, 4, 5, 6, 13 ], [ 1, 2, 3, 4, 5, 6, 14 ], [128X[104X
    [4X[28X      [ 1, 2, 3, 5, 6, 7, 11 ], [ 1, 2, 3, 5, 6, 8, 9 ], [128X[104X
    [4X[28X      [ 1, 2, 3, 5, 6, 9, 10 ], [ 1, 2, 3, 5, 6, 9, 12 ], [128X[104X
    [4X[28X      [ 1, 2, 3, 5, 6, 10, 15 ], [ 1, 2, 3, 5, 6, 14, 16 ], [128X[104X
    [4X[28X      [ 1, 2, 3, 5, 8, 11, 12 ], [ 1, 2, 5, 6, 7, 8, 16 ], [128X[104X
    [4X[28X      [ 1, 2, 5, 6, 7, 9, 14 ], [ 1, 2, 5, 6, 7, 12, 13 ], [128X[104X
    [4X[28X      [ 1, 2, 5, 6, 7, 14, 15 ] ], [128X[104X
    [4X[28X  [ [ 1, 2, 3, 4, 5, 6, 8 ], [ 1, 2, 3, 4, 5, 6, 14 ], [128X[104X
    [4X[28X      [ 1, 2, 3, 5, 6, 7, 11 ], [ 1, 2, 3, 5, 6, 9, 12 ], [128X[104X
    [4X[28X      [ 1, 2, 3, 5, 6, 10, 12 ], [ 1, 2, 3, 5, 6, 10, 16 ], [128X[104X
    [4X[28X      [ 1, 2, 3, 5, 6, 12, 13 ], [ 1, 2, 3, 5, 6, 14, 15 ], [128X[104X
    [4X[28X      [ 1, 2, 3, 5, 8, 11, 12 ], [ 1, 2, 5, 6, 7, 8, 9 ], [128X[104X
    [4X[28X      [ 1, 2, 5, 6, 7, 9, 14 ], [ 1, 2, 5, 6, 7, 12, 13 ], [128X[104X
    [4X[28X      [ 1, 2, 5, 6, 11, 14, 16 ] ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YIn this case isomorph rejection is not performed and we get two sets of base
  blocks.  They can be turned into designs by calling the [2XBlockDesign[102X ([14XDESIGN:
  BlockDesign[114X) function: [10XList(bb,x->BlockDesign(16,x,g));[110X.[133X
  
  
  [1X1.2 [33X[0;0YInstallation[133X[101X
  
  [33X[0;0YThe [5XPAG[105X package requires [5XGAP[105X 4.11 and the following packages:[133X
  
  [30X    [33X[0;6Y[5XImages[105X 1.3[133X
  
  [30X    [33X[0;6Y[5XGRAPE[105X 4.8[133X
  
  [30X    [33X[0;6Y[5XDesign[105X 1.7[133X
  
  [33X[0;0YThe  following packages are also loaded, if available. They are needed for a
  limited number of [5XPAG[105X functions.[133X
  
  [30X    [33X[0;6Y[5XAssociationSchemes[105X 2.0[133X
  
  [30X    [33X[0;6Y[5XDifSets[105X 2.3.1[133X
  
  [30X    [33X[0;6Y[5XGUAVA[105X 3.15[133X
  
  [30X    [33X[0;6Y[5XFinInG[105X 1.4.1[133X
  
  [33X[0;0YThe    current    installation    file    for    [5XPAG[105X    is    available   at
  [7Xhttps://vkrcadinac.github.io/PAG/[107X.  To  install  [5XPAG[105X,  unpack  it to the [11Xpkg[111X
  directory  of  your  local  [5XGAP[105X  installation.  The  package  uses  external
  binaries. To compile them on UNIX-like environments, change to the [11Xpkg/PAG-*[111X
  directory and call[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X$ ./configure.sh[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThis produces a [11XMakefile[111X in the current directory. Now call[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X$ make all[128X[104X
  [4X[32X[104X
  
  [33X[0;0Yto   compile   the  binares.  They  are  placed  in  the  [11Xbin[111X  subdirectory.
  Documentation in the [11Xdoc[111X subdirectory is already compiled and can be read in
  PDF,  html or from within [5XGAP[105X. To recompile the documentation, call [5XGAP[105X with
  the [11Xmakedoc.g[111X file.[133X
  
  
  [1X1.3 [33X[0;0YExamples: Designs[133X[101X
  
  [33X[0;0YThe  [5XPAG[105X  function  [10XKramerMesnerSearch[110X  performs a search for [22Xt[122X-designs with
  given  parameters  and  a given permutation group as group of automorphisms.
  See the paper by B.Â SchmalzÂ [Sch93] for an introduction to the Kramer-Mesner
  approach  to  constructing  [22Xt[122X-designs.  Our first two examples are from this
  paper. The original paper of Earl Kramer and Dale Mesner isÂ [KM76].[133X
  
  
  [1X1.3-1 [33X[0;0Y6-(14,7,4) Designs[133X[101X
  
  [33X[0;0YThe summary about known 6-designs on page 130 of [Sch93] mentions that there
  are  exactly  two 6-(14,7,4) designs with cyclic derived designs. This means
  that  the  two  6-designs  have  automorphisms  of  order  13.  They  can be
  constructed by the following [5XGAP[105X commands.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg:=Group(CyclicPerm(13));[127X[104X
    [4X[28XGroup([ (1,2,3,4,5,6,7,8,9,10,11,12,13) ])[128X[104X
    [4X[25Xgap>[125X [27Xd:=KramerMesnerSearch(6,14,7,4,g);;[127X[104X
    [4X[25Xgap>[125X [27XList(d,AllTDesignLambdas);[127X[104X
    [4X[28X[ [ 1716, 858, 396, 165, 60, 18, 4 ], [ 1716, 858, 396, 165, 60, 18, 4 ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  solver  quickly finds 24 solutions of the Kramer-Mesner system. Most of
  the  computation  time  is used to eliminate isomorphic designs. This can be
  turned off:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xd2:=KramerMesnerSearch(6,14,7,4,g,rec(NonIsomorphic:=false));;[127X[104X
    [4X[25Xgap>[125X [27XSize(d2);[127X[104X
    [4X[28X30[128X[104X
    [4X[25Xgap>[125X [27XSize(AsSet(d2));[127X[104X
    [4X[28X24[128X[104X
  [4X[32X[104X
  
  [33X[0;0YNow  we  get  a  list  of 30 designs. By default, A.Â Wassermann's LLL solver
  [Was98]  is used; it may return the same solution more than once. The number
  of distinct designs is 24. The two non-isomorphic designs have [22Xâ„¤_13[122X as their
  full automorphism group.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XList(d,BlockDesignAut);[127X[104X
    [4X[28X[ Group([ (1,2,3,4,5,6,7,8,9,10,11,12,13) ]), [128X[104X
    [4X[28X  Group([ (1,2,3,4,5,6,7,8,9,10,11,12,13) ]) ][128X[104X
  [4X[32X[104X
  
  
  [1X1.3-2 [33X[0;0Y6-(28,8,[22XÎ»[122X[101X[1X) Designs[133X[101X
  
  [33X[0;0YIn  [Sch93],  the  existence of 6-(28,8,[22XÎ»[122X) designs was established for [22XÎ»=42[122X,
  63,  84, and 105. The exact numbers of these designs with automorphism group
  [22XPÎ“  L(2,27)[122X  were  computed.  While the projective general linear groups are
  readily  available  in  [5XGAP[105X  through  the  [10XPGL[110X command, there seems to be no
  equivalent  command  for  semilinear groups. We can get [22XPÎ“ L(2,27)[122X using the
  [5XFinInG[105X  package,  as  the  collineation  group  of  the projective line over
  [22XGF(27)[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XLoadPackage("FinInG");[127X[104X
    [4X[25Xgap>[125X [27Xg1:=CollineationGroup(ProjectiveSpace(1,27));[127X[104X
    [4X[28XThe FinInG collineation group PGammaL(2,27)[128X[104X
  [4X[32X[104X
  
  [33X[0;0YWe need a permutation representation of this group on 28 points.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg:=Image(ActionOnAllProjPoints(g1));[127X[104X
    [4X[28XGroup([ (3,28,27,26,25,24,23,22,21,20,19,18,17,4,16,15,14,13,12,11,10,9,8,7,6,5), [128X[104X
    [4X[28X  (1,2,4)(5,8,24)(6,21,10)(7,16,15)(9,25,28)(11,13,14)(12,27,23)(17,26,18)[128X[104X
    [4X[28X  (19,20,22), (5,7,13)(6,10,21)(8,16,14)(9,18,22)(11,24,15)(12,27,23)(17,19,25)[128X[104X
    [4X[28X  (20,28,26) ])[128X[104X
  [4X[32X[104X
  
  [33X[0;0YAlternatively,  we  can  get  [22XPÎ“ L(2,27)[122X from the library of small primitive
  permutation groups.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XPrimitiveGroupsOfDegree(28);[127X[104X
    [4X[28X[ PGL(2, 7), PSL(2, 8), PGammaL(2, 8), PSU(3, 3), PGammaU(3, 3), PSp(6, 2), A(8), [128X[104X
    [4X[28X  S(8), PSL(2, 27), PGL(2, 27), PSL(2, 27):3, PGammaL(2, 27), A(28), S(28) ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YNow we can construct the designs with [22XÎ»=42[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xd:=KramerMesnerSearch(6,28,8,42,g,rec(BaseBlocks:=true));;[127X[104X
    [4X[25Xgap>[125X [27XSize(AsSet(d));[127X[104X
    [4X[28X3[128X[104X
  [4X[32X[104X
  
  [33X[0;0YMost  of  the  CPU  time  in  the  example  above  was  used  to compute the
  Kramer-Mesner  matrix. The left side of the Kramer-Mesner system is the same
  matrix for all [22XÎ»[122X, so we can compute it once and reuse it to save time.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xtsub:=SubsetOrbitRep(g,28,6);;[127X[104X
    [4X[25Xgap>[125X [27Xksub:=SubsetOrbitRep(g,28,8);;[127X[104X
    [4X[25Xgap>[125X [27Xm:=KramerMesnerMat(g,tsub,ksub);;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YNow we can quickly get the exact numbers of designs from the paper [Sch93].[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XSize(AsSet(SolveKramerMesner(ExpandMatRHS(m,42))));[127X[104X
    [4X[28X3[128X[104X
    [4X[25Xgap>[125X [27XSize(AsSet(SolveKramerMesner(ExpandMatRHS(m,63))));[127X[104X
    [4X[28X367[128X[104X
    [4X[25Xgap>[125X [27XSize(AsSet(SolveKramerMesner(ExpandMatRHS(m,84))));[127X[104X
    [4X[28X21743[128X[104X
    [4X[25Xgap>[125X [27XSize(AsSet(SolveKramerMesner(ExpandMatRHS(m,105))));[127X[104X
    [4X[28X38277[128X[104X
  [4X[32X[104X
  
  
  [1X1.3-3 [33X[0;0Y2-(81,6,2) Designs[133X[101X
  
  [33X[0;0YThe  first  simple 2-(81,6,2) design was recently found by A.Â NakicÂ [Nak21].
  Here are the base blocks of this design copy-pasted from the paper.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xbb:=[[[0,0,0,0],[0,0,0,1],[0,0,0,2],[0,1,0,0],[0,1,0,1],[0,1,0,2]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[0,0,1,1],[0,0,2,2],[2,1,0,0],[2,1,1,1],[2,1,2,2]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[0,1,1,1],[0,2,2,2],[0,0,1,0],[0,1,2,1],[0,2,0,2]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[0,1,2,0],[0,2,1,0],[2,0,2,1],[2,1,1,1],[2,2,0,1]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[1,0,0,0],[2,0,0,0],[0,2,2,1],[1,2,2,1],[2,2,2,1]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[1,0,1,0],[2,0,2,0],[0,1,0,0],[1,1,1,0],[2,1,2,0]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[1,0,1,1],[2,0,2,2],[0,0,2,0],[1,0,0,1],[2,0,1,2]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[1,0,2,0],[2,0,1,0],[0,2,1,1],[1,2,0,1],[2,2,2,1]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[1,0,2,2],[2,0,1,1],[0,1,2,1],[1,1,1,0],[2,1,0,2]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[1,1,0,0],[2,2,0,0],[0,2,0,1],[1,0,0,1],[2,1,0,1]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[1,1,0,1],[2,2,0,2],[0,2,2,0],[1,0,2,1],[2,1,2,2]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[1,1,2,0],[2,2,1,0],[0,0,2,1],[1,1,1,1],[2,2,0,1]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[1,1,2,1],[2,2,1,2],[0,2,1,1],[1,0,0,2],[2,1,2,0]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[1,1,2,2],[2,2,1,1],[0,2,2,0],[1,0,1,2],[2,1,0,1]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[1,2,1,2],[2,1,2,1],[0,0,2,1],[1,2,0,0],[2,1,1,2]],[127X[104X
    [4X[25X>[125X [27X[[0,0,0,0],[1,2,2,0],[2,1,1,0],[0,2,2,1],[1,1,1,1],[2,0,0,1]]]*Z(3)^0;;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  points  of this design are elements of the 4-dimensional vector space [22XV[122X
  over [22XGF(3)[122X. Here is how to get the desing in the [5XDesign[105X package format.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV:=Tuples([0,1,2],4)*Z(3)^0;;[127X[104X
    [4X[25Xgap>[125X [27Xd1:=Union(List(bb,y->List(V,x->AsSet(x+y))));;[127X[104X
    [4X[25Xgap>[125X [27Xd:=BlockDesign(81,List(d1,y->List(y,x->Position(V,x))));;[127X[104X
    [4X[25Xgap>[125X [27XAllTDesignLambdas(d);[127X[104X
    [4X[28X[ 432, 32, 2 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  full  automorphism  group  of  the  design  is  of  order 2592. It is a
  semidirect product of the additive group of [22XV[122X and a group of order 32.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xaut:=BlockDesignAut(d);[127X[104X
    [4X[28X<permutation group with 5 generators>[128X[104X
    [4X[25Xgap>[125X [27XSize(aut);[127X[104X
    [4X[28X2592[128X[104X
    [4X[25Xgap>[125X [27XStructureDescription(aut);[127X[104X
    [4X[28X"(C3 x C3 x C3 x C3) : (C16 : C2)"[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThis  group  has  three subgroups of order 648 up to conjugation. We can use
  the second subgroup to construct four more simple 2-(81,6,2) designs.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg:=Filtered(AllSubgroupsConjugation(aut),x->Size(x)=648);[127X[104X
    [4X[28X[ <permutation group of size 648 with 7 generators>, [128X[104X
    [4X[28X  <permutation group of size 648 with 7 generators>, [128X[104X
    [4X[28X  <permutation group of size 648 with 7 generators> ][128X[104X
    [4X[25Xgap>[125X [27Xdd:=KramerMesnerSearch(2,81,6,2,g[2]);;[127X[104X
    [4X[25Xgap>[125X [27XList(dd,x->Size(AutomorphismGroup(x)));[127X[104X
    [4X[28X[ 1296, 2592, 3888, 1944, 15552 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YTwo  of the new designs have larger full automorphism groups than the design
  fromÂ [Nak21].  Using  their subgroups, more simple 2-(81,6,2) designs can be
  constructed.[133X
  
  
  [1X1.3-4 [33X[0;0YQuasi-symmetric 2-(56,16,18) Designs[133X[101X
  
  [33X[0;0YHere  is  how  the  quasi-symmetric  2-(56,16,18)  designs with intersection
  numbers [22Xx=4[122X, [22Xy=8[122X from the paperÂ [KV16] can be constructed.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg:=Group((1,2,3,4,5)(6,7,8,9,10)(11,12,13,14,15)(16,17,18,19,20)[127X[104X
    [4X[25X>[125X [27X  (21,22,23,24,25)(26,27,28,29,30)(31,32,33,34,35)(36,37,38,39,40)[127X[104X
    [4X[25X>[125X [27X  (41,42,43,44,45)(46,47,48,49,50)(51,52,53,54,55),[127X[104X
    [4X[25X>[125X [27X(1,6,8)(2,21,26)(3,32,34)(4,11,5)(7,15,22)(9,16,13)(10,29,17)[127X[104X
    [4X[25X>[125X [27X  (12,33,30)(14,19,31)(18,23,35)(24,28,36)(25,37,39)(27,38,40)[127X[104X
    [4X[25X>[125X [27X  (42,51,49)(43,52,45)(44,46,47)(48,54,53)(50,56,55));[127X[104X
    [4X[28X<permutation group with 2 generators>[128X[104X
    [4X[25Xgap>[125X [27Xd:=KramerMesnerSearch(2,56,16,18,g,rec(IntersectionNumbers:=[4,8]));;[127X[104X
    [4X[25Xgap>[125X [27XSize(d);[127X[104X
    [4X[28X3[128X[104X
  [4X[32X[104X
  
  [33X[0;0YWe  check  that  they  have  all  required properties and compute their full
  automorphism groups:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XList(d,AllTDesignLambdas);[127X[104X
    [4X[28X[ [ 231, 66, 18 ], [ 231, 66, 18 ], [ 231, 66, 18 ] ][128X[104X
    [4X[25Xgap>[125X [27XList(d,IntersectionNumbers);[127X[104X
    [4X[28X[ [ 4, 8 ], [ 4, 8 ], [ 4, 8 ] ][128X[104X
    [4X[25Xgap>[125X [27Xaut:=List(d,BlockDesignAut);;[127X[104X
    [4X[25Xgap>[125X [27XList(aut,StructureDescription);[127X[104X
    [4X[28X[ "(C2 x C2 x C2 x C2) : S5", "(C2 x C2 x C2 x C2) : A5", "PSL(3,4) : C2" ][128X[104X
  [4X[32X[104X
  
  
  [1X1.4 [33X[0;0YExamples: Latin Squares[133X[101X
  
  [33X[0;0YSeeÂ [KD15]  for an introduction to Latin squares and definitions of isotopy,
  paratopy,  etc.  Multiplication  tables  of  groups  are  examples  of Latin
  squares.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XCayleyTableOfGroup(CyclicGroup(7));[127X[104X
    [4X[28X[ [ 1, 2, 3, 4, 5, 6, 7 ], [128X[104X
    [4X[28X  [ 2, 3, 4, 5, 6, 7, 1 ], [128X[104X
    [4X[28X  [ 3, 4, 5, 6, 7, 1, 2 ], [128X[104X
    [4X[28X  [ 4, 5, 6, 7, 1, 2, 3 ], [128X[104X
    [4X[28X  [ 5, 6, 7, 1, 2, 3, 4 ], [128X[104X
    [4X[28X  [ 6, 7, 1, 2, 3, 4, 5 ], [128X[104X
    [4X[28X  [ 7, 1, 2, 3, 4, 5, 6 ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YWe  can  construct  more  examples  by  prescribing symmetry groups. The [5XPAG[105X
  function   [10XKramerMesnerMOLS[110X  performs  a  search  for  sets  of  [22Xs[122X  mutually
  orthogonal  Latin squares (MOLS) of order [22Xn[122X and a given permutation group as
  autotopy  or autoparatopy group. The group must act on the [22Xs+2[122X point classes
  of   the   corresponding  transversal  design.  ByÂ [Fal12]  andÂ [SVW12],  an
  autotopism  of  order 5 of a Latin square of order 7 must have the following
  cycle structure.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xa:=MultiPerm(CyclicPerm(5),[1..7],3);[127X[104X
    [4X[28X(1,2,3,4,5)(8,9,10,11,12)(15,16,17,18,19)[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThere  are  two  main classes of such Latin squares. They are multiplication
  tables of non-associative quasigroups.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XKramerMesnerMOLS(7,1,Group(a));[127X[104X
    [4X[28X[ [ [ [ 1, 3, 2, 6, 7, 4, 5 ], [128X[104X
    [4X[28X          [ 7, 2, 4, 3, 6, 5, 1 ], [128X[104X
    [4X[28X          [ 6, 7, 3, 5, 4, 1, 2 ], [128X[104X
    [4X[28X          [ 5, 6, 7, 4, 1, 2, 3 ], [128X[104X
    [4X[28X          [ 2, 1, 6, 7, 5, 3, 4 ], [128X[104X
    [4X[28X          [ 3, 4, 5, 1, 2, 6, 7 ], [128X[104X
    [4X[28X          [ 4, 5, 1, 2, 3, 7, 6 ] ] ], [128X[104X
    [4X[28X  [ [ [ 1, 3, 5, 6, 7, 2, 4 ], [128X[104X
    [4X[28X          [ 7, 2, 4, 1, 6, 3, 5 ], [128X[104X
    [4X[28X          [ 6, 7, 3, 5, 2, 4, 1 ], [128X[104X
    [4X[28X          [ 3, 6, 7, 4, 1, 5, 2 ], [128X[104X
    [4X[28X          [ 2, 4, 6, 7, 5, 1, 3 ], [128X[104X
    [4X[28X          [ 4, 5, 1, 2, 3, 6, 7 ], [128X[104X
    [4X[28X          [ 5, 1, 2, 3, 4, 7, 6 ] ] ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YSingle  Latin squares are treated as MOLS sets of size [22Xs=1[122X, hence the excess
  brackets. When the order [22Xn[122X is a prime power, complete sets of [22Xs=n-1[122X MOLS are
  easily constructed from finite fields.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xls4:=FieldToMOLS(GF(4));[127X[104X
    [4X[28X[ [ [ 1, 2, 3, 4 ], [128X[104X
    [4X[28X      [ 2, 1, 4, 3 ], [128X[104X
    [4X[28X      [ 3, 4, 1, 2 ], [128X[104X
    [4X[28X      [ 4, 3, 2, 1 ] ], [128X[104X
    [4X[28X  [ [ 1, 2, 3, 4 ], [128X[104X
    [4X[28X      [ 3, 4, 1, 2 ], [128X[104X
    [4X[28X      [ 4, 3, 2, 1 ], [128X[104X
    [4X[28X      [ 2, 1, 4, 3 ] ], [128X[104X
    [4X[28X  [ [ 1, 2, 3, 4 ], [128X[104X
    [4X[28X      [ 4, 3, 2, 1 ], [128X[104X
    [4X[28X      [ 2, 1, 4, 3 ], [128X[104X
    [4X[28X      [ 3, 4, 1, 2 ] ] ][128X[104X
    [4X[25Xgap>[125X [27XAreMOLS(ls4);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  package [5XGuava[105X contains a function [2XAreMOLS[102X ([14XGUAVA: AreMOLS[114X) to test sets
  of  MOLS.  A  famous  problem  is  to find MOLS of order 10. The Handbook of
  Combinatorial  DesignsÂ [CD07], III.5.6 contains an example of a 1-diagonally
  cyclic  self-orthogonal  Latin  square  [22XL[122X of order 10. Self-orthogonal means
  that  [22XL[122X is orthogonal to its transpose. In other words, the MOLS set [22X{L,L^t}[122X
  is  invariant  under  the  following  conjugation, simultaneously exchanging
  rowsâ€“columns and the two Latin squares.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xc:=Sortex(Concatenation([11..20],[1..10],[31..40],[21..30]));[127X[104X
    [4X[28X(1,11)(2,12)(3,13)(4,14)(5,15)(6,16)(7,17)(8,18)(9,19)(10,20)(21,[128X[104X
    [4X[28X31)(22,32)(23,33)(24,34)(25,35)(26,36)(27,37)(28,38)(29,39)(30,40)[128X[104X
  [4X[32X[104X
  
  [33X[0;0YFurthermore, the example fromÂ [CD07] has an autotopism of order 9.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xa:=MultiPerm(CyclicPerm(9),[1..10],4);[127X[104X
    [4X[28X(1,2,3,4,5,6,7,8,9)(11,12,13,14,15,16,17,18,19)(21,22,23,24,25,26,[128X[104X
    [4X[28X27,28,29)(31,32,33,34,35,36,37,38,39)[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  permutations  [22Xa[122X and [22Xc[122X generate an autoparatopy group of order 18 we can
  use to construct the example.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg:=Group(a,c);;[127X[104X
    [4X[25Xgap>[125X [27XSize(g);[127X[104X
    [4X[28X18[128X[104X
    [4X[25Xgap>[125X [27Xls10:=KramerMesnerMOLS(10,2,g);;[127X[104X
    [4X[25Xgap>[125X [27XList(ls10,AreMOLS);[127X[104X
    [4X[28X[ true, true, true, true, true ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YWe  see  that  there are 5 inequivalent pairs of MOLS with [22Xg[122X as autoparatopy
  group. Here is one pair.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xls10[1];[127X[104X
    [4X[28X[ [ [ 1, 3, 6, 9, 2, 10, 5, 7, 4, 8 ], [128X[104X
    [4X[28X      [ 5, 2, 4, 7, 1, 3, 10, 6, 8, 9 ], [128X[104X
    [4X[28X      [ 9, 6, 3, 5, 8, 2, 4, 10, 7, 1 ], [128X[104X
    [4X[28X      [ 8, 1, 7, 4, 6, 9, 3, 5, 10, 2 ], [128X[104X
    [4X[28X      [ 10, 9, 2, 8, 5, 7, 1, 4, 6, 3 ], [128X[104X
    [4X[28X      [ 7, 10, 1, 3, 9, 6, 8, 2, 5, 4 ], [128X[104X
    [4X[28X      [ 6, 8, 10, 2, 4, 1, 7, 9, 3, 5 ], [128X[104X
    [4X[28X      [ 4, 7, 9, 10, 3, 5, 2, 8, 1, 6 ], [128X[104X
    [4X[28X      [ 2, 5, 8, 1, 10, 4, 6, 3, 9, 7 ], [128X[104X
    [4X[28X      [ 3, 4, 5, 6, 7, 8, 9, 1, 2, 10 ] ], [128X[104X
    [4X[28X  [ [ 1, 5, 9, 8, 10, 7, 6, 4, 2, 3 ], [128X[104X
    [4X[28X      [ 3, 2, 6, 1, 9, 10, 8, 7, 5, 4 ], [128X[104X
    [4X[28X      [ 6, 4, 3, 7, 2, 1, 10, 9, 8, 5 ], [128X[104X
    [4X[28X      [ 9, 7, 5, 4, 8, 3, 2, 10, 1, 6 ], [128X[104X
    [4X[28X      [ 2, 1, 8, 6, 5, 9, 4, 3, 10, 7 ], [128X[104X
    [4X[28X      [ 10, 3, 2, 9, 7, 6, 1, 5, 4, 8 ], [128X[104X
    [4X[28X      [ 5, 10, 4, 3, 1, 8, 7, 2, 6, 9 ], [128X[104X
    [4X[28X      [ 7, 6, 10, 5, 4, 2, 9, 8, 3, 1 ], [128X[104X
    [4X[28X      [ 4, 8, 7, 10, 6, 5, 3, 1, 9, 2 ], [128X[104X
    [4X[28X      [ 8, 9, 1, 2, 3, 4, 5, 6, 7, 10 ] ] ][128X[104X
  [4X[32X[104X
  
  
  [1X1.5 [33X[0;0YExamples: Cubes of Symmetric Designs[133X[101X
  
  [33X[0;0YCubes  of  symmetric  designs  are studied in the paper [KPT23a]. Here is an
  example.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xc:=DifferenceCube(Group((1,2,3,4,5,6,7)),[1,2,4],3);[127X[104X
    [4X[28X[ [ [ 1, 1, 0, 1, 0, 0, 0 ], [128X[104X
    [4X[28X     [ 1, 0, 1, 0, 0, 0, 1 ], [128X[104X
    [4X[28X     [ 0, 1, 0, 0, 0, 1, 1 ], [128X[104X
    [4X[28X     [ 1, 0, 0, 0, 1, 1, 0 ], [128X[104X
    [4X[28X     [ 0, 0, 0, 1, 1, 0, 1 ], [128X[104X
    [4X[28X     [ 0, 0, 1, 1, 0, 1, 0 ], [128X[104X
    [4X[28X     [ 0, 1, 1, 0, 1, 0, 0 ] ], [128X[104X
    [4X[28X  [ [ 1, 0, 1, 0, 0, 0, 1 ], [128X[104X
    [4X[28X     [ 0, 1, 0, 0, 0, 1, 1 ], [128X[104X
    [4X[28X     [ 1, 0, 0, 0, 1, 1, 0 ], [128X[104X
    [4X[28X     [ 0, 0, 0, 1, 1, 0, 1 ], [128X[104X
    [4X[28X     [ 0, 0, 1, 1, 0, 1, 0 ], [128X[104X
    [4X[28X     [ 0, 1, 1, 0, 1, 0, 0 ], [128X[104X
    [4X[28X     [ 1, 1, 0, 1, 0, 0, 0 ] ], [128X[104X
    [4X[28X  [ [ 0, 1, 0, 0, 0, 1, 1 ], [128X[104X
    [4X[28X      [ 1, 0, 0, 0, 1, 1, 0 ], [128X[104X
    [4X[28X      [ 0, 0, 0, 1, 1, 0, 1 ], [128X[104X
    [4X[28X      [ 0, 0, 1, 1, 0, 1, 0 ], [128X[104X
    [4X[28X      [ 0, 1, 1, 0, 1, 0, 0 ], [128X[104X
    [4X[28X      [ 1, 1, 0, 1, 0, 0, 0 ], [128X[104X
    [4X[28X      [ 1, 0, 1, 0, 0, 0, 1 ] ], [128X[104X
    [4X[28X  [ [ 1, 0, 0, 0, 1, 1, 0 ], [128X[104X
    [4X[28X      [ 0, 0, 0, 1, 1, 0, 1 ], [128X[104X
    [4X[28X      [ 0, 0, 1, 1, 0, 1, 0 ], [128X[104X
    [4X[28X      [ 0, 1, 1, 0, 1, 0, 0 ], [128X[104X
    [4X[28X      [ 1, 1, 0, 1, 0, 0, 0 ], [128X[104X
    [4X[28X      [ 1, 0, 1, 0, 0, 0, 1 ], [128X[104X
    [4X[28X      [ 0, 1, 0, 0, 0, 1, 1 ] ], [128X[104X
    [4X[28X  [ [ 0, 0, 0, 1, 1, 0, 1 ], [128X[104X
    [4X[28X      [ 0, 0, 1, 1, 0, 1, 0 ], [128X[104X
    [4X[28X      [ 0, 1, 1, 0, 1, 0, 0 ], [128X[104X
    [4X[28X      [ 1, 1, 0, 1, 0, 0, 0 ], [128X[104X
    [4X[28X      [ 1, 0, 1, 0, 0, 0, 1 ], [128X[104X
    [4X[28X      [ 0, 1, 0, 0, 0, 1, 1 ], [128X[104X
    [4X[28X      [ 1, 0, 0, 0, 1, 1, 0 ] ], [128X[104X
    [4X[28X  [ [ 0, 0, 1, 1, 0, 1, 0 ], [128X[104X
    [4X[28X      [ 0, 1, 1, 0, 1, 0, 0 ], [128X[104X
    [4X[28X      [ 1, 1, 0, 1, 0, 0, 0 ], [128X[104X
    [4X[28X      [ 1, 0, 1, 0, 0, 0, 1 ], [128X[104X
    [4X[28X      [ 0, 1, 0, 0, 0, 1, 1 ], [128X[104X
    [4X[28X      [ 1, 0, 0, 0, 1, 1, 0 ], [128X[104X
    [4X[28X      [ 0, 0, 0, 1, 1, 0, 1 ] ], [128X[104X
    [4X[28X  [ [ 0, 1, 1, 0, 1, 0, 0 ], [128X[104X
    [4X[28X      [ 1, 1, 0, 1, 0, 0, 0 ], [128X[104X
    [4X[28X      [ 1, 0, 1, 0, 0, 0, 1 ], [128X[104X
    [4X[28X      [ 0, 1, 0, 0, 0, 1, 1 ], [128X[104X
    [4X[28X      [ 1, 0, 0, 0, 1, 1, 0 ], [128X[104X
    [4X[28X      [ 0, 0, 0, 1, 1, 0, 1 ], [128X[104X
    [4X[28X      [ 0, 0, 1, 1, 0, 1, 0 ] ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThis  is a [22X3[122X-dimensional array of zeros and ones such that all [22X2[122X-dimensional
  slices  are  incidence  matrices  of [22X(7,3,1)[122X designs. For example, here is a
  slice obtained by varying coordinates [22X1,3[122X and setting coordinate [22X2[122X to [22X7[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xm:=CubeSlice(c,1,3,[7]);[127X[104X
    [4X[28X[ [ 0, 1, 1, 0, 1, 0, 0 ], [128X[104X
    [4X[28X  [ 1, 1, 0, 1, 0, 0, 0 ], [128X[104X
    [4X[28X  [ 1, 0, 1, 0, 0, 0, 1 ], [128X[104X
    [4X[28X  [ 0, 1, 0, 0, 0, 1, 1 ], [128X[104X
    [4X[28X  [ 1, 0, 0, 0, 1, 1, 0 ], [128X[104X
    [4X[28X  [ 0, 0, 0, 1, 1, 0, 1 ], [128X[104X
    [4X[28X  [ 0, 0, 1, 1, 0, 1, 0 ] ][128X[104X
    [4X[25Xgap>[125X [27Xm*TransposedMat(m);[127X[104X
    [4X[28X[ [ 3, 1, 1, 1, 1, 1, 1 ], [128X[104X
    [4X[28X  [ 1, 3, 1, 1, 1, 1, 1 ], [128X[104X
    [4X[28X  [ 1, 1, 3, 1, 1, 1, 1 ], [128X[104X
    [4X[28X  [ 1, 1, 1, 3, 1, 1, 1 ], [128X[104X
    [4X[28X  [ 1, 1, 1, 1, 3, 1, 1 ], [128X[104X
    [4X[28X  [ 1, 1, 1, 1, 1, 3, 1 ], [128X[104X
    [4X[28X  [ 1, 1, 1, 1, 1, 1, 3 ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YA cube of arbitrary dimension [22Xnge 2[122X can be constructed from a difference set
  in  a  group  by  calling  [2XDifferenceCube[102X  ([14X2.6-1[114X).  The  function  uses the
  representation  of  difference  sets  from  the  [5XDifSets[105X  package  [14X'DifSets:
  Difference Sets'[114X. For [22Xn=2[122X, the difference cube is simply an incidence matrix
  of  the  associated symmetric design, i.e. the development of the difference
  set.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg:=SmallGroup(15,1);[127X[104X
    [4X[28X<pc group of size 15 with 2 generators>[128X[104X
    [4X[25Xgap>[125X [27XStructureDescription(g);[127X[104X
    [4X[28X"C15"[128X[104X
    [4X[25Xgap>[125X [27Xds:=DifferenceSets(g);[127X[104X
    [4X[28X[ [ 1, 2, 3, 4, 8, 11, 12 ] ][128X[104X
    [4X[25Xgap>[125X [27Xm:=DifferenceCube(g,ds[1],2);[127X[104X
    [4X[28X[ [ 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0 ], [128X[104X
    [4X[28X  [ 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1 ], [128X[104X
    [4X[28X  [ 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1 ], [128X[104X
    [4X[28X  [ 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0 ], [128X[104X
    [4X[28X  [ 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1 ], [128X[104X
    [4X[28X  [ 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0 ], [128X[104X
    [4X[28X  [ 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1 ], [128X[104X
    [4X[28X  [ 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1 ], [128X[104X
    [4X[28X  [ 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0 ], [128X[104X
    [4X[28X  [ 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0 ], [128X[104X
    [4X[28X  [ 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0 ], [128X[104X
    [4X[28X  [ 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0 ], [128X[104X
    [4X[28X  [ 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1 ], [128X[104X
    [4X[28X  [ 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0 ], [128X[104X
    [4X[28X  [ 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1 ] ][128X[104X
    [4X[25Xgap>[125X [27Xd:=BlockDesign(15,List(m,x->Positions(x,1)));;[127X[104X
    [4X[25Xgap>[125X [27XAllTDesignLambdas(d);[127X[104X
    [4X[28X[ 15, 7, 3 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  function [2XDifferenceSets[102X ([14XDifSets: DifferenceSets[114X) returns a list of all
  difference  sets  up  to  equivalence  in  a  given  group.  Here is a small
  [22X4[122X-dimensional [22X(3,2,1)[122X cube.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xc:=DifferenceCube(Group((1,2,3)),[1,2],4);[127X[104X
    [4X[28X[ [ [ [ 1, 1, 0 ], [ 1, 0, 1 ], [ 0, 1, 1 ] ], [128X[104X
    [4X[28X      [ [ 1, 0, 1 ], [ 0, 1, 1 ], [ 1, 1, 0 ] ], [128X[104X
    [4X[28X      [ [ 0, 1, 1 ], [ 1, 1, 0 ], [ 1, 0, 1 ] ] ], [128X[104X
    [4X[28X  [ [ [ 1, 0, 1 ], [ 0, 1, 1 ], [ 1, 1, 0 ] ], [128X[104X
    [4X[28X      [ [ 0, 1, 1 ], [ 1, 1, 0 ], [ 1, 0, 1 ] ], [128X[104X
    [4X[28X      [ [ 1, 1, 0 ], [ 1, 0, 1 ], [ 0, 1, 1 ] ] ], [128X[104X
    [4X[28X  [ [ [ 0, 1, 1 ], [ 1, 1, 0 ], [ 1, 0, 1 ] ], [128X[104X
    [4X[28X      [ [ 1, 1, 0 ], [ 1, 0, 1 ], [ 0, 1, 1 ] ], [128X[104X
    [4X[28X      [ [ 1, 0, 1 ], [ 0, 1, 1 ], [ 1, 1, 0 ] ] ] ][128X[104X
    [4X[25Xgap>[125X [27XCubeTest(c);[127X[104X
    [4X[28X[ [ 3, 2, 1 ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  function  [2XCubeTest[102X  ([14X2.6-12[114X) looks at all possible slices and checks if
  they  are  incidence  matrices  of  [22X(v,k,Î»)[122X  designs. In the next example we
  construct all [22X3[122X-dimensional difference cubes of order [22X21[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg:=AllSmallGroups(21);;[127X[104X
    [4X[25Xgap>[125X [27XList(g,StructureDescription);[127X[104X
    [4X[28X[ "C7 : C3", "C21" ][128X[104X
    [4X[25Xgap>[125X [27Xds:=List(g,DifferenceSets);[127X[104X
    [4X[28X[ [ [ 1, 2, 3, 9, 10 ] ], [ [ 1, 2, 7, 10, 16 ] ] ][128X[104X
    [4X[25Xgap>[125X [27Xc1:=DifferenceCube(g[1],ds[1][1],3);;[127X[104X
    [4X[25Xgap>[125X [27Xc2:=DifferenceCube(g[2],ds[2][1],3);;[127X[104X
    [4X[25Xgap>[125X [27XList([c1,c2],CubeTest);[127X[104X
    [4X[28X[ [ [ 21, 5, 1 ] ], [ [ 21, 5, 1 ] ] ][128X[104X
    [4X[25Xgap>[125X [27XSize(CubeAut(c1));[127X[104X
    [4X[28X1323[128X[104X
    [4X[25Xgap>[125X [27XSize(CubeAut(c2));[127X[104X
    [4X[28X2646[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe function [2XCubeAut[102X ([14X2.6-14[114X) computes the full autotopy group of a cube. By
  setting  options, full autoparatopy groups can also be obtained. We can make
  a  non-difference  cube by the "group cube" construction of Theorem 4.1 from
  [KPT23a].  First  we  search  for  all  [22X(21,5,1)[122X  designs  with blocks being
  difference sets in the Frobenius group of order [22X21[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xallds:=Filtered(Combinations([1..21],5),x->IsDifferenceSet(g[1],x));;[127X[104X
    [4X[25Xgap>[125X [27XSize(allds);[127X[104X
    [4X[28X294[128X[104X
    [4X[25Xgap>[125X [27XA:=KramerMesnerMat(Group(()),Combinations([1..21],2),allds,1,21);;[127X[104X
    [4X[25Xgap>[125X [27XPAGGlobalOptions.Silent:=true;;[127X[104X
    [4X[25Xgap>[125X [27Xsol:=AsSet(SolveKramerMesner(A));;[127X[104X
    [4X[25Xgap>[125X [27Xdes:=List(sol,x->BaseBlocks(allds,x));;[127X[104X
    [4X[25Xgap>[125X [27XSize(des);[127X[104X
    [4X[28X70[128X[104X
  [4X[32X[104X
  
  [33X[0;0YAmong  these  [22X70[122X  designs,  [22X14[122X  are  left  developments,  and  [22X14[122X  are right
  developments.  The  remaining  [22X42[122X  designs  are not developments, but all of
  their blocks are difference sets.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xdev1:=AsSet(List(allds,x->LeftDevelopment(g[1],x).blocks));;[127X[104X
    [4X[25Xgap>[125X [27XSize(dev1);[127X[104X
    [4X[28X14[128X[104X
    [4X[25Xgap>[125X [27Xdev2:=AsSet(List(allds,x->RightDevelopment(g[1],x).blocks));;[127X[104X
    [4X[25Xgap>[125X [27XSize(dev2);[127X[104X
    [4X[28X14[128X[104X
    [4X[25Xgap>[125X [27Xnondev:=Difference(des,Union(dev1,dev2));;[127X[104X
    [4X[25Xgap>[125X [27XSize(nondev);[127X[104X
    [4X[28X42[128X[104X
  [4X[32X[104X
  
  [33X[0;0YNow  we  apply the group cube construction to these [22X42[122X designs. The obtained
  cubes are equivalent.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xcc:=List(nondev,x->GroupCube(g[1],x,3));;[127X[104X
    [4X[25Xgap>[125X [27XSize(CubeFilter(cc));[127X[104X
    [4X[28X1[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe function [2XCubeFilter[102X ([14X2.6-15[114X) eliminates equivalent copies from a list of
  cubes.  Our  new  cube  is  not  equivalent with the two [22X(21,5,1)[122X difference
  cubes.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xc3:=cc[1];;[127X[104X
    [4X[25Xgap>[125X [27XCubeTest(c3);[127X[104X
    [4X[28X[ [ 21, 5, 1 ] ][128X[104X
    [4X[25Xgap>[125X [27XSize(CubeFilter([c1,c2,c3]));[127X[104X
    [4X[28X3[128X[104X
    [4X[25Xgap>[125X [27XSize(CubeAut(c3));[127X[104X
    [4X[28X441[128X[104X
  [4X[32X[104X
  
  [33X[0;0YHowever, the three cubes have the same slice invariant; seeÂ [KPT23a] for the
  definition.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XList([c1,c2,c3],SliceInvariant);[127X[104X
    [4X[28X[ [ [ [ [ 120960, 21 ] ], 3 ] ], [ [ [ [ 120960, 21 ] ], 3 ] ], [128X[104X
    [4X[28X  [ [ [ [ 120960, 21 ] ], 3 ] ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YCubes  with  slice  invariants  different  from  any  difference cube can be
  constructed  for  parameters  of the form [22X(4^m,2^m-1(2^m-1),2^m-1(2^m-1-1))[122X,
  [22Xmge 2[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xm:=2;; n:=3;;[127X[104X
    [4X[25Xgap>[125X [27Xcl:=List([1,2,3],i->GroupCube(SDPSeriesGroup(m),SDPSeriesDesign(m,i),n));;[127X[104X
    [4X[25Xgap>[125X [27XList(cl,CubeTest);[127X[104X
    [4X[28X[ [ [ 16, 6, 2 ] ], [ [ 16, 6, 2 ] ], [ [ 16, 6, 2 ] ] ][128X[104X
    [4X[25Xgap>[125X [27XList(cl,SliceInvariant);[127X[104X
    [4X[28X[ [ [ [ [ 11520, 16 ] ], 3 ] ], [128X[104X
    [4X[28X  [ [ [ [ 768, 16 ] ], 2 ], [ [ [ 11520, 16 ] ], 1 ] ], [128X[104X
    [4X[28X  [ [ [ [ 384, 16 ] ], 2 ], [ [ [ 11520, 16 ] ], 1 ] ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  first cube in the list [10Xcl[110X is a difference cube. The other two cubes are
  not,  because  they have non-isomorphic slices in different directions. This
  construction works for all [22Xmge 2[122X and dimensions [22Xnge 3[122X, but it takes a lot of
  time   and   memory  for  bigger  values  of  [22Xm[122X  andÂ [22Xn[122X.  We  classified  all
  3-dimensional  group  cubes  of  [22X(16,6,2)[122X  designs;  they  are  available at
  [7Xhttps://web.math.pmf.unizg.hr/~krcko/results/cubes.html[107X.   A  list  of  1423
  non-group cubes of [22X(16,6,2)[122X designs is also provided.[133X
  
  [33X[0;0YThe  package  [5XDifSets[105X  contains  precomputed  lists of difference sets up to
  equivalence.  They  are  loaded by the function [2XLoadDifferenceSets[102X ([14XDifSets:
  LoadDifferenceSets[114X).  We  can use them to compute all difference cubes up to
  equivalence.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xv:=27;[127X[104X
    [4X[28X27[128X[104X
    [4X[25Xgap>[125X [27Xl1:=Concatenation(List([1..NrSmallGroups(v)],[127X[104X
    [4X[25X>[125X [27Xi->List(LoadDifferenceSets(v,i),x->[i,x])));[127X[104X
    [4X[28X[ [ 4, [ 1, 2, 3, 4, 5, 6, 9, 12, 16, 19, 20, 23, 26 ] ], [128X[104X
    [4X[28X  [ 4, [ 1, 2, 3, 4, 5, 7, 8, 9, 13, 15, 18, 19, 23 ] ], [128X[104X
    [4X[28X  [ 5, [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 23, 25, 27 ] ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe list [10Xl1[110X now contains all inequivalent difference sets in groups of order
  27.  The  first  entry is the group ID from the [5XGAP[105X library of small groups,
  followed by the difference set.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XStructureDescription(SmallGroup(27,4));[127X[104X
    [4X[28X"C9 : C3"[128X[104X
    [4X[25Xgap>[125X [27XStructureDescription(SmallGroup(27,5));[127X[104X
    [4X[28X"C3 x C3 x C3"[128X[104X
    [4X[25Xgap>[125X [27Xl2:=List(l1,x->DifferenceCube(SmallGroup(v,x[1]),x[2],3));;[127X[104X
    [4X[25Xgap>[125X [27Xl3:=l1{CubeFilter(l2,rec(Positions:=true))};[127X[104X
    [4X[28X[ [ 4, [ 1, 2, 3, 4, 5, 6, 9, 12, 16, 19, 20, 23, 26 ] ], [128X[104X
    [4X[28X  [ 5, [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 23, 25, 27 ] ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  list  [10Xl3[110X  contains difference sets giving 3-cubes that are inequivalent
  (not  paratopic).  Notice that the two cubes arising from difference sets in
  [22Xâ„¤_9â‹Š â„¤_3[122X (group ID 4) are paratopic, but not isotopic:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xl4:=l1{CubeFilter(l2,rec(Positions:=true,Isotopy:=true))};[127X[104X
    [4X[28X[ [ 4, [ 1, 2, 3, 4, 5, 6, 9, 12, 16, 19, 20, 23, 26 ] ], [128X[104X
    [4X[28X  [ 4, [ 1, 2, 3, 4, 5, 7, 8, 9, 13, 15, 18, 19, 23 ] ], [128X[104X
    [4X[28X  [ 5, [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 23, 25, 27 ] ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YWe  will  now construct some non-difference group cubes in [22Xâ„¤_9â‹Š â„¤_3[122X. Here is
  an efficient way to get all difference sets, including equivalent ones.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xg:=SmallGroup(v,4);[127X[104X
    [4X[28X<pc group of size 27 with 3 generators>[128X[104X
    [4X[25Xgap>[125X [27Xge:=ExtendedPermRepresentation(g);[127X[104X
    [4X[28X<permutation group with 7 generators>[128X[104X
    [4X[25Xgap>[125X [27Xds:=LoadDifferenceSets(v,4);[127X[104X
    [4X[28X[ [ 1, 2, 3, 4, 5, 6, 9, 12, 16, 19, 20, 23, 26 ], [128X[104X
    [4X[28X  [ 1, 2, 3, 4, 5, 7, 8, 9, 13, 15, 18, 19, 23 ] ][128X[104X
    [4X[25Xgap>[125X [27Xallds:=Union(List(ds,x->Orbit(ge,x,OnSets)));;[127X[104X
    [4X[25Xgap>[125X [27XSize(allds);[127X[104X
    [4X[28X972[128X[104X
  [4X[32X[104X
  
  [33X[0;0YFor parameters [22X(21,5,1)[122X we could search for all designs with difference sets
  as  blocks.  This would take too much time for [22X(27,13,6)[122X, so we prescribe an
  automorphism group of orderÂ 3.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xsub:=AllSubgroupsConjugation(ge);;[127X[104X
    [4X[25Xgap>[125X [27Xh:=sub[4];[127X[104X
    [4X[28XGroup([ (1,10,4)(2,15,7)(3,17,9)(5,20,12)(6,22,14)(8,23,16)[128X[104X
    [4X[28X  (11,25,19)(13,26,21)(18,27,24) ])[128X[104X
    [4X[25Xgap>[125X [27Xalldsorb:=List(Orbits(h,allds,OnSets),Representative);;[127X[104X
    [4X[25Xgap>[125X [27XSize(alldsorb);[127X[104X
    [4X[28X324[128X[104X
    [4X[25Xgap>[125X [27Xpairsorb:=List(Orbits(h,Combinations([1..27],2),OnSets),Representative);;[127X[104X
    [4X[25Xgap>[125X [27XSize(pairsorb);[127X[104X
    [4X[28X117[128X[104X
    [4X[25Xgap>[125X [27XA:=KramerMesnerMat(h,pairsorb,alldsorb,6,27);;[127X[104X
    [4X[25Xgap>[125X [27Xsol:=AsSet(SolveKramerMesner(A));;[127X[104X
    [4X[25Xgap>[125X [27Xdes:=List(sol,x->BlockDesign(27,BaseBlocks(alldsorb,x),h).blocks);;[127X[104X
    [4X[25Xgap>[125X [27XSize(des);[127X[104X
    [4X[28X288[128X[104X
  [4X[32X[104X
  
  [33X[0;0YWe  get  288  designs with difference sets as blocks. Let us remove the ones
  which are developments of their blocks.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xdev1:=AsSet(List(allds,x->LeftDevelopment(g,x).blocks));;[127X[104X
    [4X[25Xgap>[125X [27Xdev2:=AsSet(List(allds,x->RightDevelopment(g,x).blocks));;[127X[104X
    [4X[25Xgap>[125X [27Xnondev:=List(Difference(des,Union(dev1,dev2)),x->[4,x]);;[127X[104X
    [4X[25Xgap>[125X [27XSize(nondev);[127X[104X
    [4X[28X216[128X[104X
  [4X[32X[104X
  
  [33X[0;0YNext, we remove the ones leading to equivalent 3-cubes.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xcc:=List(nondev,x->GroupCube(SmallGroup(v,x[1]),x[2],3));;[127X[104X
    [4X[25Xgap>[125X [27Xl5:=nondev{CubeFilter(cc,rec(Positions:=true))};[127X[104X
    [4X[28X[ [ 4, [128X[104X
    [4X[28X      [ [ 1, 2, 3, 4, 5, 6, 9, 12, 16, 19, 20, 23, 26 ], [128X[104X
    [4X[28X          [ 1, 2, 3, 4, 5, 7, 10, 13, 14, 19, 21, 22, 24 ], [128X[104X
    [4X[28X          [ 1, 2, 3, 7, 11, 12, 13, 15, 20, 23, 24, 25, 27 ], [128X[104X
    [4X[28X          [ 1, 2, 4, 6, 10, 11, 13, 14, 15, 17, 18, 20, 26 ], [128X[104X
    [4X[28X          [ 1, 2, 4, 8, 9, 12, 13, 16, 17, 18, 22, 24, 27 ], [128X[104X
    [4X[28X          [ 1, 2, 9, 10, 11, 14, 16, 17, 19, 21, 23, 25, 27 ], [128X[104X
    [4X[28X          [ 1, 3, 4, 7, 8, 11, 17, 18, 19, 22, 23, 25, 26 ], [128X[104X
    [4X[28X          [ 1, 3, 5, 8, 9, 10, 14, 15, 18, 23, 24, 26, 27 ], [128X[104X
    [4X[28X          [ 1, 3, 5, 8, 10, 11, 12, 15, 16, 17, 20, 21, 22 ], [128X[104X
    [4X[28X          [ 1, 4, 6, 7, 9, 10, 12, 15, 21, 22, 25, 26, 27 ], [128X[104X
    [4X[28X          [ 1, 5, 6, 7, 9, 11, 14, 16, 18, 20, 22, 24, 25 ], [128X[104X
    [4X[28X          [ 1, 5, 6, 8, 13, 17, 19, 20, 21, 24, 25, 26, 27 ], [128X[104X
    [4X[28X          [ 1, 6, 7, 8, 12, 13, 14, 15, 16, 18, 19, 21, 23 ], [128X[104X
    [4X[28X          [ 2, 3, 5, 6, 9, 13, 15, 17, 18, 21, 22, 23, 25 ], [128X[104X
    [4X[28X          [ 2, 3, 6, 7, 8, 9, 11, 12, 14, 17, 21, 24, 26 ], [128X[104X
    [4X[28X          [ 2, 3, 6, 8, 10, 12, 14, 18, 19, 20, 22, 25, 27 ], [128X[104X
    [4X[28X          [ 2, 4, 5, 7, 8, 9, 11, 15, 18, 19, 20, 21, 27 ], [128X[104X
    [4X[28X          [ 2, 4, 8, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26 ], [128X[104X
    [4X[28X          [ 2, 5, 6, 7, 8, 10, 11, 13, 16, 22, 23, 26, 27 ], [128X[104X
    [4X[28X          [ 2, 5, 7, 10, 12, 15, 16, 17, 18, 19, 24, 25, 26 ], [128X[104X
    [4X[28X          [ 3, 4, 5, 11, 12, 13, 14, 16, 18, 21, 25, 26, 27 ], [128X[104X
    [4X[28X          [ 3, 4, 6, 7, 10, 16, 17, 18, 20, 21, 23, 24, 27 ], [128X[104X
    [4X[28X          [ 3, 4, 6, 8, 9, 10, 11, 13, 15, 16, 19, 24, 25 ], [128X[104X
    [4X[28X          [ 3, 7, 9, 13, 14, 15, 16, 17, 19, 20, 22, 26, 27 ], [128X[104X
    [4X[28X          [ 4, 5, 6, 11, 12, 14, 15, 17, 19, 22, 23, 24, 27 ], [128X[104X
    [4X[28X          [ 4, 5, 7, 8, 9, 10, 12, 13, 14, 17, 20, 23, 25 ], [128X[104X
    [4X[28X          [ 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 26 ] ] ], [128X[104X
    [4X[28X  [ 4, [128X[104X
    [4X[28X      [ [ 1, 2, 3, 4, 5, 6, 9, 12, 16, 19, 20, 23, 26 ], [128X[104X
    [4X[28X          [ 1, 2, 3, 5, 7, 11, 14, 15, 18, 20, 23, 24, 25 ], [128X[104X
    [4X[28X          [ 1, 2, 3, 7, 9, 13, 14, 17, 19, 20, 21, 22, 27 ], [128X[104X
    [4X[28X          [ 1, 2, 4, 6, 7, 8, 10, 11, 13, 18, 20, 22, 26 ], [128X[104X
    [4X[28X          [ 1, 2, 4, 10, 12, 14, 15, 21, 22, 23, 25, 26, 27 ], [128X[104X
    [4X[28X          [ 1, 2, 5, 8, 12, 13, 17, 18, 19, 21, 24, 25, 26 ], [128X[104X
    [4X[28X          [ 1, 3, 4, 6, 8, 11, 13, 15, 17, 19, 23, 25, 27 ], [128X[104X
    [4X[28X          [ 1, 3, 5, 8, 10, 11, 12, 15, 16, 17, 20, 21, 22 ], [128X[104X
    [4X[28X          [ 1, 3, 6, 7, 8, 9, 10, 12, 18, 21, 23, 24, 27 ], [128X[104X
    [4X[28X          [ 1, 4, 5, 6, 7, 10, 13, 14, 15, 16, 19, 21, 24 ], [128X[104X
    [4X[28X          [ 1, 4, 8, 9, 14, 15, 16, 17, 18, 20, 24, 26, 27 ], [128X[104X
    [4X[28X          [ 1, 5, 6, 9, 11, 12, 13, 14, 16, 18, 22, 25, 27 ], [128X[104X
    [4X[28X          [ 1, 7, 9, 10, 11, 16, 17, 19, 22, 23, 24, 25, 26 ], [128X[104X
    [4X[28X          [ 2, 3, 4, 5, 10, 13, 16, 17, 18, 22, 23, 24, 27 ], [128X[104X
    [4X[28X          [ 2, 3, 4, 8, 9, 10, 11, 14, 16, 18, 19, 21, 25 ], [128X[104X
    [4X[28X          [ 2, 3, 6, 9, 10, 11, 12, 13, 14, 15, 17, 24, 26 ], [128X[104X
    [4X[28X          [ 2, 4, 5, 7, 8, 9, 11, 12, 15, 19, 22, 24, 27 ], [128X[104X
    [4X[28X          [ 2, 5, 6, 7, 8, 11, 14, 16, 17, 21, 23, 26, 27 ], [128X[104X
    [4X[28X          [ 2, 6, 7, 10, 12, 15, 16, 17, 18, 19, 20, 25, 27 ], [128X[104X
    [4X[28X          [ 2, 6, 8, 9, 13, 15, 16, 20, 21, 22, 23, 24, 25 ], [128X[104X
    [4X[28X          [ 3, 4, 5, 6, 7, 9, 15, 17, 18, 21, 22, 25, 26 ], [128X[104X
    [4X[28X          [ 3, 4, 7, 11, 12, 13, 16, 20, 21, 24, 25, 26, 27 ], [128X[104X
    [4X[28X          [ 3, 5, 6, 8, 10, 14, 19, 20, 22, 24, 25, 26, 27 ], [128X[104X
    [4X[28X          [ 3, 7, 8, 12, 13, 14, 15, 16, 18, 19, 22, 23, 26 ], [128X[104X
    [4X[28X          [ 4, 5, 7, 8, 9, 10, 12, 13, 14, 17, 20, 23, 25 ], [128X[104X
    [4X[28X          [ 4, 6, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24 ], [128X[104X
    [4X[28X          [ 5, 9, 10, 11, 13, 15, 18, 19, 20, 21, 23, 26, 27 ] ] ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YWe  have constructed two [22X(27,13,6)[122X designs with blocks being difference sets
  in [22Xâ„¤_9â‹Š â„¤_3[122X, which are not their developments. Here are the slice invariants
  of the difference and non-difference group 3-cubes constructed so far.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xdc:=List(l3,x->DifferenceCube(SmallGroup(v,x[1]),x[2],3));;[127X[104X
    [4X[25Xgap>[125X [27Xgc:=List(l5,x->GroupCube(SmallGroup(v,x[1]),x[2],3));;[127X[104X
    [4X[25Xgap>[125X [27XList(dc,SliceInvariant);[127X[104X
    [4X[28X[ [ [ [ [ 1053, 27 ] ], 3 ] ], [ [ [ [ 1053, 27 ] ], 3 ] ] ][128X[104X
    [4X[25Xgap>[125X [27XList(gc,SliceInvariant);[127X[104X
    [4X[28X[ [ [ [ [ 27, 27 ] ], 2 ], [ [ [ 1053, 27 ] ], 1 ] ], [128X[104X
    [4X[28X  [ [ [ [ 27, 27 ] ], 2 ], [ [ [ 1053, 27 ] ], 1 ] ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YMore  examples of difference and non-difference group cubes are available on
  our web page:[133X
  
  [33X[0;0Y[7Xhttps://web.math.pmf.unizg.hr/~krcko/results/cubes.html[107X[133X
  
  
  [1X1.6 [33X[0;0YExamples: Mosaics of Combinatorial Designs[133X[101X
  
  [33X[0;0YMosaics   of   combinatorial  designs  were  introduced  in  [GGP18]  and  a
  contruction from resolvable designs was proved. This construction of mosaics
  is implemented in [5XPAG[105X for affine designs.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xag123:=AffineMosaic(1,2,3);[127X[104X
    [4X[28X[ [ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3 ], [128X[104X
    [4X[28X  [ 2, 3, 1, 1, 2, 3, 2, 3, 1, 2, 3, 1 ], [128X[104X
    [4X[28X  [ 3, 1, 2, 1, 2, 3, 3, 1, 2, 3, 1, 2 ], [128X[104X
    [4X[28X  [ 1, 2, 3, 2, 3, 1, 3, 1, 2, 2, 3, 1 ], [128X[104X
    [4X[28X  [ 2, 3, 1, 2, 3, 1, 1, 2, 3, 3, 1, 2 ], [128X[104X
    [4X[28X  [ 3, 1, 2, 2, 3, 1, 2, 3, 1, 1, 2, 3 ], [128X[104X
    [4X[28X  [ 1, 2, 3, 3, 1, 2, 2, 3, 1, 3, 1, 2 ], [128X[104X
    [4X[28X  [ 2, 3, 1, 3, 1, 2, 3, 1, 2, 1, 2, 3 ], [128X[104X
    [4X[28X  [ 3, 1, 2, 3, 1, 2, 1, 2, 3, 2, 3, 1 ] ][128X[104X
    [4X[25Xgap>[125X [27XMosaicParameters(ag123);[127X[104X
    [4X[28X"2-(9,3,1) + 2-(9,3,1) + 2-(9,3,1)"[128X[104X
    [4X[25Xgap>[125X [27Xag232:=AffineMosaic(2,3,2);[127X[104X
    [4X[28X[ [ 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2 ], [128X[104X
    [4X[28X  [ 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1 ], [128X[104X
    [4X[28X  [ 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1 ], [128X[104X
    [4X[28X  [ 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2 ], [128X[104X
    [4X[28X  [ 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1 ], [128X[104X
    [4X[28X  [ 2, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2 ], [128X[104X
    [4X[28X  [ 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2 ], [128X[104X
    [4X[28X  [ 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1 ] ][128X[104X
    [4X[25Xgap>[125X [27XMosaicParameters(ag232);[127X[104X
    [4X[28X"3-(8,4,1) + 3-(8,4,1)"[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  command  [10XAffineMosaic[110X  uses the [5XFinInG[105X package and is not loaded if the
  package  is not present. Tilings of groups with difference sets [CKZ15] give
  rise  to  mosaics  of  symmetric  designs.  Here is an example of a [22X(31,6,1)[122X
  tiling and the corresponding mosaic.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xt:=[ [ 1, 5, 11, 24, 25, 27 ], [127X[104X
    [4X[25X>[125X [27X[ 2, 10, 17, 19, 22, 23 ], [127X[104X
    [4X[25X>[125X [27X[ 3, 4, 7, 13, 15, 20 ], [127X[104X
    [4X[25X>[125X [27X[ 6, 8, 9, 14, 26, 30 ], [127X[104X
    [4X[25X>[125X [27X[ 12, 16, 18, 21, 28, 29 ] ];;[127X[104X
    [4X[25Xgap>[125X [27Xm:=DifferenceMosaic(CyclicGroup(31), t);;[127X[104X
    [4X[25Xgap>[125X [27XMosaicParameters(m);[127X[104X
    [4X[28X"2-(31,6,1) + 2-(31,6,1) + 2-(31,6,1) + 2-(31,6,1) + 2-(31,6,1)"[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  paper  [Krc24]  gives some interesting small examples of mosaics. Files
  containing these examples are available on the web page[133X
  
  [33X[0;0Y[7Xhttps://web.math.pmf.unizg.hr/~krcko/results/mosaics.html[107X[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xm:=ReadMat("13-346ex.txt")[1];[127X[104X
    [4X[28X[ [ 1, 3, 3, 3, 2, 3, 2, 2, 3, 1, 3, 2, 1, 1, 3, 2, 2, 3, 3, 1, 3, 3, 3, 2, 1, 2 ], [128X[104X
    [4X[28X  [ 1, 1, 3, 3, 3, 2, 3, 2, 2, 3, 1, 3, 2, 2, 1, 3, 2, 2, 3, 3, 1, 3, 3, 3, 2, 1 ], [128X[104X
    [4X[28X  [ 2, 1, 1, 3, 3, 3, 2, 3, 2, 2, 3, 1, 3, 1, 2, 1, 3, 2, 2, 3, 3, 1, 3, 3, 3, 2 ], [128X[104X
    [4X[28X  [ 3, 2, 1, 1, 3, 3, 3, 2, 3, 2, 2, 3, 1, 2, 1, 2, 1, 3, 2, 2, 3, 3, 1, 3, 3, 3 ], [128X[104X
    [4X[28X  [ 1, 3, 2, 1, 1, 3, 3, 3, 2, 3, 2, 2, 3, 3, 2, 1, 2, 1, 3, 2, 2, 3, 3, 1, 3, 3 ], [128X[104X
    [4X[28X  [ 3, 1, 3, 2, 1, 1, 3, 3, 3, 2, 3, 2, 2, 3, 3, 2, 1, 2, 1, 3, 2, 2, 3, 3, 1, 3 ], [128X[104X
    [4X[28X  [ 2, 3, 1, 3, 2, 1, 1, 3, 3, 3, 2, 3, 2, 3, 3, 3, 2, 1, 2, 1, 3, 2, 2, 3, 3, 1 ], [128X[104X
    [4X[28X  [ 2, 2, 3, 1, 3, 2, 1, 1, 3, 3, 3, 2, 3, 1, 3, 3, 3, 2, 1, 2, 1, 3, 2, 2, 3, 3 ], [128X[104X
    [4X[28X  [ 3, 2, 2, 3, 1, 3, 2, 1, 1, 3, 3, 3, 2, 3, 1, 3, 3, 3, 2, 1, 2, 1, 3, 2, 2, 3 ], [128X[104X
    [4X[28X  [ 2, 3, 2, 2, 3, 1, 3, 2, 1, 1, 3, 3, 3, 3, 3, 1, 3, 3, 3, 2, 1, 2, 1, 3, 2, 2 ], [128X[104X
    [4X[28X  [ 3, 2, 3, 2, 2, 3, 1, 3, 2, 1, 1, 3, 3, 2, 3, 3, 1, 3, 3, 3, 2, 1, 2, 1, 3, 2 ], [128X[104X
    [4X[28X  [ 3, 3, 2, 3, 2, 2, 3, 1, 3, 2, 1, 1, 3, 2, 2, 3, 3, 1, 3, 3, 3, 2, 1, 2, 1, 3 ], [128X[104X
    [4X[28X  [ 3, 3, 3, 2, 3, 2, 2, 3, 1, 3, 2, 1, 1, 3, 2, 2, 3, 3, 1, 3, 3, 3, 2, 1, 2, 1 ] ][128X[104X
    [4X[25Xgap>[125X [27XMosaicParameters(m);[127X[104X
    [4X[28X"2-(13,3,1) + 2-(13,4,2) + 2-(13,6,5)"[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThis is the first example of an inhomogenous mosaic, containing designs with
  distinct parameters.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xm1:=ReadMat("9-3-2ex1.txt")[1];[127X[104X
    [4X[28X[ [ 1, 2, 1, 1, 2, 1, 1, 3, 3, 1, 2, 3, 1, 3, 2, 1, 3, 3, 2, 2, 3, 2, 3, 2 ], [128X[104X
    [4X[28X  [ 1, 1, 2, 1, 1, 2, 3, 1, 3, 3, 1, 2, 2, 1, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3 ], [128X[104X
    [4X[28X  [ 2, 1, 1, 2, 1, 1, 3, 3, 1, 2, 3, 1, 3, 2, 1, 3, 3, 1, 2, 3, 2, 3, 2, 2 ], [128X[104X
    [4X[28X  [ 1, 3, 2, 2, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 2, 2, 2, 3, 1, 3, 1, 1, 3, 2 ], [128X[104X
    [4X[28X  [ 2, 1, 3, 3, 2, 3, 1, 1, 2, 1, 3, 3, 2, 2, 1, 3, 2, 2, 1, 1, 3, 2, 1, 3 ], [128X[104X
    [4X[28X  [ 3, 2, 1, 3, 3, 2, 2, 1, 1, 3, 1, 3, 1, 2, 2, 2, 3, 2, 3, 1, 1, 3, 2, 1 ], [128X[104X
    [4X[28X  [ 2, 3, 3, 1, 3, 2, 3, 2, 2, 2, 2, 1, 1, 3, 3, 2, 1, 1, 1, 2, 3, 3, 1, 1 ], [128X[104X
    [4X[28X  [ 3, 2, 3, 2, 1, 3, 2, 3, 2, 1, 2, 2, 3, 1, 3, 1, 2, 1, 3, 1, 2, 1, 3, 1 ], [128X[104X
    [4X[28X  [ 3, 3, 2, 3, 2, 1, 2, 2, 3, 2, 1, 2, 3, 3, 1, 1, 1, 2, 2, 3, 1, 1, 1, 3 ] ][128X[104X
    [4X[25Xgap>[125X [27XMosaicParameters(m1);[127X[104X
    [4X[28X"2-(9,3,2) + 2-(9,3,2) + 2-(9,3,2)"[128X[104X
    [4X[25Xgap>[125X [27Xm2:=ReadMat("9-3-2ex2.txt")[1];[127X[104X
    [4X[28X[ [ 1, 2, 1, 1, 2, 1, 1, 3, 3, 1, 3, 3, 1, 3, 2, 1, 2, 3, 3, 2, 2, 3, 2, 2 ], [128X[104X
    [4X[28X  [ 1, 1, 2, 1, 1, 2, 3, 1, 3, 3, 1, 3, 2, 1, 3, 3, 1, 2, 2, 3, 2, 2, 3, 2 ], [128X[104X
    [4X[28X  [ 2, 1, 1, 2, 1, 1, 3, 3, 1, 3, 3, 1, 3, 2, 1, 2, 3, 1, 2, 2, 3, 2, 2, 3 ], [128X[104X
    [4X[28X  [ 1, 3, 2, 3, 3, 1, 2, 2, 1, 2, 1, 3, 3, 3, 2, 2, 3, 2, 1, 2, 1, 1, 3, 1 ], [128X[104X
    [4X[28X  [ 2, 1, 3, 1, 3, 3, 1, 2, 2, 3, 2, 1, 2, 3, 3, 2, 2, 3, 1, 1, 2, 1, 1, 3 ], [128X[104X
    [4X[28X  [ 3, 2, 1, 3, 1, 3, 2, 1, 2, 1, 3, 2, 3, 2, 3, 3, 2, 2, 2, 1, 1, 3, 1, 1 ], [128X[104X
    [4X[28X  [ 2, 3, 3, 2, 3, 2, 2, 3, 1, 1, 2, 2, 1, 1, 2, 3, 1, 1, 1, 3, 3, 3, 1, 2 ], [128X[104X
    [4X[28X  [ 3, 2, 3, 2, 2, 3, 1, 2, 3, 2, 1, 2, 2, 1, 1, 1, 3, 1, 3, 1, 3, 2, 3, 1 ], [128X[104X
    [4X[28X  [ 3, 3, 2, 3, 2, 2, 3, 1, 2, 2, 2, 1, 1, 2, 1, 1, 1, 3, 3, 3, 1, 1, 2, 3 ] ][128X[104X
    [4X[25Xgap>[125X [27XMosaicParameters(m2);[127X[104X
    [4X[28X"2-(9,3,2) + 2-(9,3,2) + 2-(9,3,2)"[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThese  two  mosaics cannot be obtained by the construction from [GGP18]. The
  first  mosaic contains three isomorphic copies of a [22X2[122X-[22X(9,3,2)[122X design that is
  not resolvable.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xd1:=BlockDesignFilter(MosaicToBlockDesigns(m1));[127X[104X
    [4X[28X[ rec( blocks := [ [ 1, 2, 4 ], [ 1, 2, 7 ], [ 1, 3, 6 ], [ 1, 3, 9 ], [128X[104X
    [4X[28X          [ 1, 4, 5 ], [ 1, 5, 8 ], [ 1, 6, 7 ], [ 1, 8, 9 ], [ 2, 3, 5 ], [128X[104X
    [4X[28X          [ 2, 3, 8 ], [ 2, 4, 8 ], [ 2, 5, 6 ], [ 2, 6, 9 ], [ 2, 7, 9 ], [128X[104X
    [4X[28X          [ 3, 4, 6 ], [ 3, 4, 7 ], [ 3, 5, 9 ], [ 3, 7, 8 ], [ 4, 5, 7 ], [128X[104X
    [4X[28X          [ 4, 6, 9 ], [ 4, 8, 9 ], [ 5, 6, 8 ], [ 5, 7, 9 ], [ 6, 7, 8 ] ], [128X[104X
    [4X[28X      isBlockDesign := true, v := 9 ) ][128X[104X
    [4X[25Xgap>[125X [27XMakeResolutionsComponent(d1[1]);[127X[104X
    [4X[25Xgap>[125X [27Xd1[1].resolutions.list;[127X[104X
    [4X[28X[  ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  second mosaic contains three non-isomorphic designs, one resolvable and
  two not resolvable.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xd2:=BlockDesignFilter(MosaicToBlockDesigns(m2));[127X[104X
    [4X[28X[ rec( blocks := [ [ 1, 2, 4 ], [ 1, 2, 5 ], [ 1, 3, 4 ], [ 1, 3, 6 ], [128X[104X
    [4X[28X          [ 1, 5, 8 ], [ 1, 6, 7 ], [ 1, 7, 9 ], [ 1, 8, 9 ], [ 2, 3, 5 ], [128X[104X
    [4X[28X          [ 2, 3, 6 ], [ 2, 4, 8 ], [ 2, 6, 9 ], [ 2, 7, 8 ], [ 2, 7, 9 ], [128X[104X
    [4X[28X          [ 3, 4, 7 ], [ 3, 5, 9 ], [ 3, 7, 8 ], [ 3, 8, 9 ], [ 4, 5, 7 ], [128X[104X
    [4X[28X          [ 4, 5, 9 ], [ 4, 6, 8 ], [ 4, 6, 9 ], [ 5, 6, 7 ], [ 5, 6, 8 ] ], [128X[104X
    [4X[28X      isBlockDesign := true, v := 9 ), [128X[104X
    [4X[28X  rec( blocks := [ [ 1, 2, 5 ], [ 1, 2, 7 ], [ 1, 3, 4 ], [ 1, 3, 9 ], [128X[104X
    [4X[28X          [ 1, 4, 7 ], [ 1, 5, 6 ], [ 1, 6, 8 ], [ 1, 8, 9 ], [ 2, 3, 6 ], [128X[104X
    [4X[28X          [ 2, 3, 8 ], [ 2, 4, 6 ], [ 2, 4, 9 ], [ 2, 5, 8 ], [ 2, 7, 9 ], [128X[104X
    [4X[28X          [ 3, 4, 5 ], [ 3, 5, 7 ], [ 3, 6, 9 ], [ 3, 7, 8 ], [ 4, 5, 8 ], [128X[104X
    [4X[28X          [ 4, 6, 7 ], [ 4, 8, 9 ], [ 5, 6, 9 ], [ 5, 7, 9 ], [ 6, 7, 8 ] ], [128X[104X
    [4X[28X      isBlockDesign := true, v := 9 ), [128X[104X
    [4X[28X  rec( blocks := [ [ 1, 2, 4 ], [ 1, 2, 8 ], [ 1, 3, 6 ], [ 1, 3, 7 ], [128X[104X
    [4X[28X          [ 1, 4, 5 ], [ 1, 5, 9 ], [ 1, 6, 7 ], [ 1, 8, 9 ], [ 2, 3, 5 ], [128X[104X
    [4X[28X          [ 2, 3, 9 ], [ 2, 4, 8 ], [ 2, 5, 6 ], [ 2, 6, 7 ], [ 2, 7, 9 ], [128X[104X
    [4X[28X          [ 3, 4, 6 ], [ 3, 4, 8 ], [ 3, 5, 9 ], [ 3, 7, 8 ], [ 4, 5, 7 ], [128X[104X
    [4X[28X          [ 4, 6, 9 ], [ 4, 7, 9 ], [ 5, 6, 8 ], [ 5, 7, 8 ], [ 6, 8, 9 ] ], [128X[104X
    [4X[28X      isBlockDesign := true, v := 9 ) ][128X[104X
    [4X[25Xgap>[125X [27XMakeResolutionsComponent(d2[1]);[127X[104X
    [4X[25Xgap>[125X [27XMakeResolutionsComponent(d2[2]);[127X[104X
    [4X[25Xgap>[125X [27XMakeResolutionsComponent(d2[3]);[127X[104X
    [4X[25Xgap>[125X [27Xd2[1].resolutions.list;[127X[104X
    [4X[28X[ rec( autGroup := Group([ (1,5,8)(2,6,9)(3,4,7), (1,7,6)(2,8,4)(3,9,5), (1,2)[128X[104X
    [4X[28X          (4,5)(7,9) ]), [128X[104X
    [4X[28X      partition := [128X[104X
    [4X[28X        [ [128X[104X
    [4X[28X          rec( blocks := [ [ 1, 2, 4 ], [ 3, 8, 9 ], [ 5, 6, 7 ] ], [128X[104X
    [4X[28X              isBlockDesign := true, v := 9 ), [128X[104X
    [4X[28X          rec( blocks := [ [ 1, 2, 5 ], [ 3, 7, 8 ], [ 4, 6, 9 ] ], [128X[104X
    [4X[28X              isBlockDesign := true, v := 9 ), [128X[104X
    [4X[28X          rec( blocks := [ [ 1, 3, 4 ], [ 2, 7, 9 ], [ 5, 6, 8 ] ], [128X[104X
    [4X[28X              isBlockDesign := true, v := 9 ), [128X[104X
    [4X[28X          rec( blocks := [ [ 1, 3, 6 ], [ 2, 7, 8 ], [ 4, 5, 9 ] ], [128X[104X
    [4X[28X              isBlockDesign := true, v := 9 ), [128X[104X
    [4X[28X          rec( blocks := [ [ 1, 5, 8 ], [ 2, 6, 9 ], [ 3, 4, 7 ] ], [128X[104X
    [4X[28X              isBlockDesign := true, v := 9 ), [128X[104X
    [4X[28X          rec( blocks := [ [ 1, 6, 7 ], [ 2, 4, 8 ], [ 3, 5, 9 ] ], [128X[104X
    [4X[28X              isBlockDesign := true, v := 9 ), [128X[104X
    [4X[28X          rec( blocks := [ [ 1, 7, 9 ], [ 2, 3, 5 ], [ 4, 6, 8 ] ], [128X[104X
    [4X[28X              isBlockDesign := true, v := 9 ), [128X[104X
    [4X[28X          rec( blocks := [ [ 1, 8, 9 ], [ 2, 3, 6 ], [ 4, 5, 7 ] ], [128X[104X
    [4X[28X              isBlockDesign := true, v := 9 ) ] ) ][128X[104X
    [4X[25Xgap>[125X [27Xd2[2].resolutions.list;[127X[104X
    [4X[28X[  ][128X[104X
    [4X[25Xgap>[125X [27Xd2[3].resolutions.list;[127X[104X
    [4X[28X[  ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YFinally, here is a mosaic of projective planes of order [22X3[122X from [Krc24].[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xm:=ReadMat("13-4-1.txt")[1];[127X[104X
    [4X[28X[ [ 0, 1, 2, 1, 3, 2, 3, 1, 1, 3, 3, 2, 2 ], [128X[104X
    [4X[28X  [ 3, 0, 2, 3, 2, 1, 2, 1, 2, 3, 1, 1, 3 ], [128X[104X
    [4X[28X  [ 3, 1, 0, 2, 1, 3, 3, 3, 2, 2, 1, 2, 1 ], [128X[104X
    [4X[28X  [ 3, 3, 1, 0, 1, 1, 2, 2, 1, 2, 3, 3, 2 ], [128X[104X
    [4X[28X  [ 2, 1, 1, 2, 0, 2, 2, 3, 3, 1, 3, 1, 3 ], [128X[104X
    [4X[28X  [ 2, 3, 2, 3, 3, 0, 1, 3, 1, 2, 2, 1, 1 ], [128X[104X
    [4X[28X  [ 1, 2, 2, 2, 3, 3, 0, 2, 1, 1, 1, 3, 3 ], [128X[104X
    [4X[28X  [ 3, 2, 3, 1, 3, 1, 2, 0, 3, 1, 2, 2, 1 ], [128X[104X
    [4X[28X  [ 1, 1, 3, 2, 2, 1, 1, 3, 0, 3, 2, 3, 2 ], [128X[104X
    [4X[28X  [ 1, 3, 3, 1, 1, 2, 3, 2, 2, 0, 2, 1, 3 ], [128X[104X
    [4X[28X  [ 1, 2, 1, 3, 2, 2, 3, 1, 3, 2, 0, 3, 1 ], [128X[104X
    [4X[28X  [ 2, 2, 3, 3, 1, 3, 1, 1, 2, 1, 3, 0, 2 ], [128X[104X
    [4X[28X  [ 2, 3, 1, 1, 2, 3, 1, 2, 3, 3, 1, 2, 0 ] ][128X[104X
    [4X[25Xgap>[125X [27XMosaicParameters(m);[127X[104X
    [4X[28X"2-(13,4,1) + 2-(13,4,1) + 2-(13,4,1)"[128X[104X
    [4X[25Xgap>[125X [27Xaut:=MatAut(m);[127X[104X
    [4X[28XGroup([ (1,3,2)(4,6,5)(7,9,8)(10,12,11)(14,16,15)(17,19,18)(20,22,21)[128X[104X
    [4X[28X  (23,25,24)(28,30,29) ])[128X[104X
    [4X[25Xgap>[125X [27XSize(aut);[127X[104X
    [4X[28X3[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  full  automorphism  group of this mosaic is of order [22X3[122X, so it cannot be
  obtained by tiling groups with [22X(13,4,1)[122X difference sets.[133X
  
